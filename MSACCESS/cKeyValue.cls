VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cKeyValue"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'***********************************************************************************************************************************************************************
'***********************************************************************************************************************************************************************
'***********************************************************************************************************************************************************************
'***********************************************************************************************************************************************************************
' Class is designed to store KEY-VALUE PAIR (for structure like PROPERTIES and another)
'***********************************************************************************************************************************************************************
'***********************************************************************************************************************************************************************
'***********************************************************************************************************************************************************************
'***********************************************************************************************************************************************************************

Option Compare Database
Option Explicit


Const SEQV_DEFAULT As String = "="


Public key As String
Public value As Variant

Private m_Link As String
Private m_Tag As String
Private m_ID As Long

Private m_SEQV As String
'***********************************************************************************************************************************************************************

Public Property Get Link() As String
      Link = m_Link
End Property
Public Property Let Link(sLink As String)
      m_Link = sLink
End Property
Public Property Get TAG() As String
      TAG = m_Tag
End Property
Public Property Let TAG(sTag As String)
      m_Tag = sTag
End Property
Public Property Get id() As Long
      id = m_ID
End Property
Public Property Let id(IDD As Long)
      m_ID = IDD
End Property




'=======================================================================================================================================================================
' GET TYPE OF VALUE
' vbEmpty           0       Empty (uninitialized)
' vbNull            1       Null (no valid data)
' vbInteger         2       Integer
' vbLong            3       Long integer
' vbSingle          4       Single-precision floating-point number
' vbDouble          5       Double-precision floating-point number
' vbCurrency        6       Currency value
' vbDate            7       Date Value
' vbString          8       String
' vbObject          9       Object
' vbError           10      Error Value
' vbBoolean         11      Boolean value
' vbVariant         12      Variant (used only with arrays of variants)
' vbDataObject      13      A data access object
' vbDecimal         14      Decimal value
' vbByte            17      Byte value
' vbUserDefinedType 36      Variants that contain user-defined types
' vbArray           8192    Array
'=======================================================================================================================================================================
Public Function GetType() As Integer
   GetType = varType(value)
End Function

Public Function ToString(Optional SEQV As String) As String
      If key = "" Then Exit Function
      ToString = key & m_SEQV & SerializeValue()
End Function

'#####################################################################################################################################################################
'#####################################################################################################################################################################
'######/////////###//////////###/////////####//###########//#######///#########//////////###/////////#################################################################
'######//#####//###//######//######///########//#########//#######//#//############//#######//########################################################################
'######//#####//###//######//######///#########//#######//#######//###//###########//#######//########################################################################
'######/////////###//////////######///##########//#####//#######//#####//##########//#######/////#####################################################################
'######//##########//###//#########///###########//###//#######///////////#########//#######//########################################################################
'######//##########//####//########///############//#//#######//#########//########//#######//########################################################################
'######//##########//#####///###/////////##########///#######//###########//#######//#######/////////#################################################################
'#####################################################################################################################################################################
'#####################################################################################################################################################################
Private Sub Class_Initialize()
      m_SEQV = SEQV_DEFAULT
End Sub
Private Function SerializeValue()
Dim iType As Integer, sRes As String

On Error GoTo ErrHandle
'----------------------
    iType = GetType
    If iType < 2 Then
         sRes = ""
    ElseIf iType = vbArray Then
         sRes = Join(value, vbTab)
    ElseIf iType = vbObject Then
         sRes = ""
    ElseIf iType = vbVariant Then
         sRes = ""
    Else
         sRes = Trim(CStr(value))
    End If
'------------------------
ExitHere:
    SerializeValue = sRes '!!!!!!!!!!!
    Exit Function
'----------------
ErrHandle:
    ErrPrint "SerializeValue", Err.Number, Err.Description
    Err.Clear
End Function
'////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'----------------------------------------------------------------------------------------------------------------------------------------------------------------
' Error Handler
'----------------------------------------------------------------------------------------------------------------------------------------------------------------
Private Function ErrPrint(FuncName As String, ErrNumber As Long, ErrDescription As String, Optional bDebug As Boolean = True, _
                                                                                                           Optional sModName As String = "cKeyValue") As String
Dim sRes As String
Const ERR_CHAR As String = "#"
Const ERR_REPEAT As Integer = 60

sRes = String(ERR_REPEAT, ERR_CHAR) & vbCrLf & "ERROR OF [" & sModName & ": " & FuncName & "]" & vbTab & "ERR#" & ErrNumber & vbTab & Now() & _
       vbCrLf & ErrDescription & vbCrLf & String(ERR_REPEAT, ERR_CHAR)
If bDebug Then Debug.Print sRes
'----------------------------------------------------------
ExitHere:
       Beep
       ErrPrint = sRes '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
End Function

