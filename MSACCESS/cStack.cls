VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cStack"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'******************************************************************************************************************************************************
'******************************************************************************************************************************************************
'******************************************************************************************************************************************************
' DESCRIPTION: Stack (LIFO)
' VERSION    : v 0.1 30.01.2017
' COPYRIGHT  : V.Khvatov DigitalXpert
'******************************************************************************************************************************************************
'******************************************************************************************************************************************************
'******************************************************************************************************************************************************
Option Compare Database
Option Explicit


Private m_Stack As Object
'######################################################################################################################################################

'======================================================================================================================================================
' Add new Element
'=====================================================================================================================================================
Public Sub Push(vItem As Variant)
     m_Stack.Push vItem
End Sub
'======================================================================================================================================================
' Count of Elements
'=====================================================================================================================================================
Public Function Count() As Long
    Count = m_Stack.Count
End Function

'======================================================================================================================================================
' Return Element without deleting
'=====================================================================================================================================================
Public Function Peek() As Variant
    If IsObject(m_Stack.Peek) Then
        Set Peek = m_Stack.Peek
    Else
        Peek = m_Stack.Peek
    End If
End Function

'======================================================================================================================================================
' Return Element with deleting
'=====================================================================================================================================================
Public Function Pop() As Variant
    If IsObject(m_Stack.Peek) Then
        Set Pop = m_Stack.Pop
    Else
        Pop = m_Stack.Pop
    End If
End Function

'======================================================================================================================================================
' Clear all elements
'=====================================================================================================================================================
Public Sub Clear()
    m_Stack.Clear
End Sub

'======================================================================================================================================================
' Convert To String
'=====================================================================================================================================================
Public Function ToString(Optional DLM As String = vbCrLf) As String
   If Me.Count = 0 Then Exit Function
   ToString = Join(m_Stack.ToArray(), DLM)
End Function

'======================================================================================================================================================
'Determines whether an element is in the ArrayList.
'======================================================================================================================================================
Public Function Contains(ObjectA As Variant) As Boolean
    Contains = m_Stack.Contains(ObjectA)
End Function

'======================================================================================================================================================
' Clone elements
'=====================================================================================================================================================
Public Function Clone() As Object
    Set Clone = m_Stack.Clone
End Function

'======================================================================================================================================================
' ToArray
'=====================================================================================================================================================
Public Function ToArray() As Variant
    ToArray = m_Stack.ToArray
End Function


'=====================================================================================================================================================
'Determines whether the specified object is equal to the current object.(Inherited from Object.)
'=====================================================================================================================================================
Public Function Equals(Control As Object) As Boolean
    Equals = m_Stack.Equals(Control)
End Function

'///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Private Sub Class_Initialize()
    Set m_Stack = CreateObject("System.Collections.Stack")  'Create Stack
End Sub
Private Sub Class_Terminate()
    Set m_Stack = Nothing
End Sub

'///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'-------------------------------------------------------------------------------------------------------------------------------------------------------
' Error Handler
'------------------------------------------------------------------------------------------------------------------------------------------------------
Private Function ErrPrint(FuncName As String, ErrNumber As Long, ErrDescription As String, Optional bDebug As Boolean = True, _
                                                                                                  Optional sModName As String = "cArrayList") As String
Dim sRes As String
Const ERR_CHAR As String = "#"
Const ERR_REPEAT As Integer = 60

sRes = String(ERR_REPEAT, ERR_CHAR) & vbCrLf & "ERROR OF [" & sModName & ": " & FuncName & "]" & vbTab & "ERR#" & ErrNumber & vbTab & Now() & _
       vbCrLf & ErrDescription & vbCrLf & String(ERR_REPEAT, ERR_CHAR)
If bDebug Then Debug.Print sRes
'----------------------------------------------------------
ExitHere:
       Beep
       ErrPrint = sRes '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
End Function

